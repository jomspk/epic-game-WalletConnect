[{"/Users/banri/Dev/UNCHAIN/ETH-NFT-game/nft-game-starter-project/src/index.js":"1","/Users/banri/Dev/UNCHAIN/ETH-NFT-game/nft-game-starter-project/src/App.js":"2","/Users/banri/Dev/UNCHAIN/ETH-NFT-game/nft-game-starter-project/src/Components/SelectCharacter/index.js":"3","/Users/banri/Dev/UNCHAIN/ETH-NFT-game/nft-game-starter-project/src/constants.js":"4","/Users/banri/Dev/UNCHAIN/ETH-NFT-game/nft-game-starter-project/src/Components/Arena/index.js":"5","/Users/banri/Dev/UNCHAIN/ETH-NFT-game/nft-game-starter-project/src/Components/LoadingIndicator/index.js":"6","/Users/banri/Dev/UNCHAIN/ETH-NFT-game/epic-game-WalletConnect/src/index.js":"7","/Users/banri/Dev/UNCHAIN/ETH-NFT-game/epic-game-WalletConnect/src/App.js":"8","/Users/banri/Dev/UNCHAIN/ETH-NFT-game/epic-game-WalletConnect/src/constants.js":"9","/Users/banri/Dev/UNCHAIN/ETH-NFT-game/epic-game-WalletConnect/src/Components/SelectCharacter/index.js":"10","/Users/banri/Dev/UNCHAIN/ETH-NFT-game/epic-game-WalletConnect/src/Components/LoadingIndicator/index.js":"11","/Users/banri/Dev/UNCHAIN/ETH-NFT-game/epic-game-WalletConnect/src/Components/Arena/index.js":"12"},{"size":219,"mtime":1653978511240,"results":"13","hashOfConfig":"14"},{"size":4569,"mtime":1654001775223,"results":"15","hashOfConfig":"14"},{"size":4575,"mtime":1654002062496,"results":"16","hashOfConfig":"14"},{"size":424,"mtime":1653987122539,"results":"17","hashOfConfig":"14"},{"size":5015,"mtime":1654002856726,"results":"18","hashOfConfig":"14"},{"size":261,"mtime":1653978511239,"results":"19","hashOfConfig":"14"},{"size":219,"mtime":1653978511240,"results":"20","hashOfConfig":"21"},{"size":4722,"mtime":1654269999056,"results":"22","hashOfConfig":"21"},{"size":424,"mtime":1653987122539,"results":"23","hashOfConfig":"21"},{"size":4575,"mtime":1654002062496,"results":"24","hashOfConfig":"21"},{"size":261,"mtime":1653978511239,"results":"25","hashOfConfig":"21"},{"size":5015,"mtime":1654002856726,"results":"26","hashOfConfig":"21"},{"filePath":"27","messages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},"1rd18e8",{"filePath":"30","messages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32"},{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35"},{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"1sjus0f",{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"44"},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"44"},"/Users/banri/Dev/UNCHAIN/ETH-NFT-game/nft-game-starter-project/src/index.js",[],["56","57"],"/Users/banri/Dev/UNCHAIN/ETH-NFT-game/nft-game-starter-project/src/App.js",["58"],"import React, { useEffect, useState } from 'react';\nimport twitterLogo from './assets/twitter-logo.svg';\nimport './App.css';\nimport SelectCharacter from \"./Components/SelectCharacter\";\nimport { CONTRACT_ADDRESS, transformCharacterData } from \"./constants\";\nimport { ethers } from \"ethers\";\nimport myEpicGame from \"./utils/MyEpicGame.json\";\nimport Arena from \"./Components/Arena\";\nimport LoadingIndicator from \"./Components/LoadingIndicator\";\n\n// Constants\nconst TWITTER_HANDLE = 'Bazar1305';\nconst TWITTER_LINK = `https://twitter.com/${TWITTER_HANDLE}`;\n\nconst App = () => {\n  const [currentAccount, setCurrentAccount] = useState(null);\n  const [characterNFT, setCharacterNFT] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const checkNetwork = async () => {\n    try {\n      if (window.ethereum.networkVersion !== \"4\") {\n        alert(\"Rinkeby Test Network に接続してください!\");\n      } else {\n        console.log(\"Rinkeby に接続されています。\");\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  const checkIfWalletIsConnected = async () => {\n    try {\n      const { ethereum } = window;\n      if (!ethereum) {\n        console.log(\"Make sure you have MetaMask!\");\n        setIsLoading(false);\n        return;\n      } else {\n        console.log(\"We have the ethereum object\", ethereum);\n        const accounts = await ethereum.request({ method: \"eth_accounts\"});\n        if (accounts.length !== 0) {\n          const account = accounts[0];\n          console.log(\"Found an authorized account:\", account);\n          setCurrentAccount(account);\n          checkNetwork();\n        } else {\n          console.log(\"No authorized account found\");\n        }\n      }\n    } catch (error) {\n      console.log(error);\n    }\n    setIsLoading(false);\n  };\n\n  const renderContent = () => {\n    if (isLoading) {\n      return <LoadingIndicator/>;\n    }\n    if (!currentAccount) {\n      return (\n        <div className='connect-wallet-container'>\n          <img src='https://i.imgur.com/TXBQ4cC.png' alt=\"LUFFY\"/>\n          <button className='cta-button connect-wallet-button' onClick={connectWalletAction}>Connect Wallet to Get Started</button>\n        </div>\n      );\n    } else if (currentAccount && !characterNFT) {\n      return <SelectCharacter setCharacterNFT={setCharacterNFT}/>\n    } else if (currentAccount && characterNFT) {\n      return <Arena characterNFT={characterNFT} setCharacterNFT={setCharacterNFT} />\n    }\n  }\n\n  const connectWalletAction = async () => {\n    try {\n      const { ethereum } = window;\n      if (!ethereum) {\n        alert(\"MetaMaskをダウンロードしてください!\");\n        return;\n      }\n      checkIfWalletIsConnected();\n      const accounts = await ethereum.request({\n        method: \"eth_requestAccounts\",\n      });\n\n      console.log(\"Connected\", accounts[0]);\n      setCurrentAccount(accounts[0]);\n      checkNetwork();\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    setIsLoading(true);\n    checkIfWalletIsConnected();\n  }, []);\n  useEffect(() => {\n    const fetchNFTMetadata = async () => {\n      console.log(\"Checking for Character NFT on address:\", currentAccount);\n\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\n      const signer = provider.getSigner();\n      const gameContract = new ethers.Contract(\n        CONTRACT_ADDRESS,\n        myEpicGame.abi,\n        signer\n      );\n\n      const txn = await gameContract.checkIfUserHasNFT();\n      if (txn.name) {\n        console.log(\"User has character NFT\");\n        setCharacterNFT(transformCharacterData(txn));\n      } else {\n        console.log(\"No character NFT found\");\n      }\n    };\n\n    if (currentAccount) {\n      console.log(\"CurrentAccount:\", currentAccount);\n      fetchNFTMetadata();\n    }\n    setIsLoading(false);\n  }, [currentAccount]);\n  return (\n    <div className=\"App\">\n      <div className=\"container\">\n        <div className=\"header-container\">\n          <p className=\"header gradient-text\">⚡️ METAVERSE GAME ⚡️</p>\n          <p className=\"sub-text\">プレイヤーと協力してボスを倒そう✨</p>\n          {renderContent()}\n        </div>\n        <div className=\"footer-container\">\n          <img alt=\"Twitter Logo\" className=\"twitter-logo\" src={twitterLogo} />\n          <a\n            className=\"footer-text\"\n            href={TWITTER_LINK}\n            target=\"_blank\"\n            rel=\"noreferrer\"\n          >{`built with @${TWITTER_HANDLE}`}</a>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","/Users/banri/Dev/UNCHAIN/ETH-NFT-game/nft-game-starter-project/src/Components/SelectCharacter/index.js",["59"],"import React, { useEffect, useState } from \"react\";\nimport \"./SelectCharacter.css\";\nimport { ethers } from \"ethers\";\nimport { CONTRACT_ADDRESS,transformCharacterData } from \"../../constants\";\nimport myEpicGame from \"../../utils/MyEpicGame.json\";\nimport LoadingIndicator from \"../LoadingIndicator\";\n\nconst SelectCharacter = ({ setCharacterNFT }) => {\n    const [characters, setCharacters] = useState([]);\n    const [gameContract, setGameContract] = useState(null);\n    const [mintingCharacter, setMintingCharacter] = useState(false);\n\n    const mintCharacterNFTAction = (characterId) => async () => {\n        try {\n            if (gameContract) {\n                setMintingCharacter(true);\n                console.log(\"Minting character in progress...\");\n                const mintTxn = await gameContract.mintCharacterNFT(characterId);\n                await mintTxn.wait();\n                console.log(\"mintTxn:\", mintTxn);\n                setMintingCharacter(false);\n            } \n        } catch (error) {\n            console.warn(\"MintCharacterAction Error:\", error);\n            setMintingCharacter(false);\n        }\n    };\n\n    useEffect(() => {\n        const { ethereum } = window;\n        if (ethereum) {\n            const provider = new ethers.providers.Web3Provider(ethereum);\n            const signer = provider.getSigner();\n            const gameContract = new ethers.Contract(\n                CONTRACT_ADDRESS,\n                myEpicGame.abi,\n                signer\n            );\n\n            setGameContract(gameContract);\n        } else {\n            console.log(\"Ethereum object not found\");\n        }\n    }, []);\n\n    useEffect(() => {\n        const getCharacters = async () => {\n            try {\n                console.log(\"Getting contract characters to mint\");\n                const charactersTxn = await gameContract.getAllDefaultCharacters();\n\n                console.log(\"charactersTxn:\", charactersTxn);\n\n                const characters = charactersTxn.map((characterData) => \n                    transformCharacterData(characterData)\n                );\n\n                setCharacters(characters);\n            } catch (error) {\n                console.log(\"Something went wrong fetching characters:\", error);\n            }\n        };\n\n        const onCharacterMint = async (sender, tokenId, characterIndex) => {\n            console.log(\n                `CharacterNFTMinted - sender: ${sender} tokenId: ${tokenId.toNumber()} characterIndex: ${characterIndex.toNumber()}`\n            );\n            if (gameContract) {\n                const characterNFT = await gameContract.checkIfUserHasNFT();\n                console.log(\"CharacterNFT: \", characterNFT);\n                setCharacterNFT(transformCharacterData(characterNFT));\n                alert(\n                    `NFTキャラクターがMintされました -- リンクはこちらです: https://rinkeby.rarible.com/token/${\n                        gameContract.address\n                    }:${tokenId.toNumber()}?tab=details`\n                );\n            }\n        };\n        if (gameContract) {\n            getCharacters();\n            gameContract.on(\"CharacterNFTMinted\", onCharacterMint);\n        }\n\n        return () => {\n            if (gameContract) {\n                gameContract.off(\"CharacterNFTMinted\", onCharacterMint);\n            }\n        };\n    }, [gameContract]);\n\n    const renderCharacters = () =>{\n        console.log(\"characters:\",characters);\n        return characters.map((character, index) => (\n            <div className=\"character-item\" key={character.name}>\n              <div className=\"name-container\">\n                <p>{character.name}</p>\n              </div>\n              <img src={character.imageURI} alt={character.name} />\n              <button\n                type=\"button\"\n                className=\"character-mint-button\"\n                onClick={mintCharacterNFTAction(index)}\n              >{`Mint ${character.name}`}</button>\n            </div>\n          )); \n    }\n    return (\n        <div className=\"select-character-container\">\n            <h2>⏬一緒に戦う NFT キャラクターを選択⏬</h2>\n            {characters.length > 0 && (\n                <div className=\"character-grid\">{renderCharacters()}</div>\n            )}\n            {mintingCharacter && (\n            <div className=\"loading\">\n                <div className=\"indicator\">\n                <LoadingIndicator />\n                <p>Minting In Progress...</p>\n                </div>\n            </div>\n    )}\n        </div>\n    );\n};\nexport default SelectCharacter;","/Users/banri/Dev/UNCHAIN/ETH-NFT-game/nft-game-starter-project/src/constants.js",[],"/Users/banri/Dev/UNCHAIN/ETH-NFT-game/nft-game-starter-project/src/Components/Arena/index.js",["60"],"/Users/banri/Dev/UNCHAIN/ETH-NFT-game/nft-game-starter-project/src/Components/LoadingIndicator/index.js",[],"/Users/banri/Dev/UNCHAIN/ETH-NFT-game/epic-game-WalletConnect/src/index.js",[],["61","62"],"/Users/banri/Dev/UNCHAIN/ETH-NFT-game/epic-game-WalletConnect/src/App.js",["63"],"/Users/banri/Dev/UNCHAIN/ETH-NFT-game/epic-game-WalletConnect/src/constants.js",[],"/Users/banri/Dev/UNCHAIN/ETH-NFT-game/epic-game-WalletConnect/src/Components/SelectCharacter/index.js",["64"],"/Users/banri/Dev/UNCHAIN/ETH-NFT-game/epic-game-WalletConnect/src/Components/LoadingIndicator/index.js",[],"/Users/banri/Dev/UNCHAIN/ETH-NFT-game/epic-game-WalletConnect/src/Components/Arena/index.js",["65"],"import React, { useEffect, useState } from \"react\";\nimport { ethers } from \"ethers\";\nimport { CONTRACT_ADDRESS, transformCharacterData } from \"../../constants\";\nimport myEpicGame from \"../../utils/MyEpicGame.json\";\nimport \"./Arena.css\";\nimport LoadingIndicator from \"../LoadingIndicator\";\n\nconst Arena = ({ characterNFT, setCharacterNFT }) => {\n    const [gameContract, setGameContract] = useState(null);\n    \n    const [boss, setBoss] = useState(null);\n    const [attackState, setAttackState] = useState(\"\");\n    const [showToast, setShowToast] = useState(false);\n    \n    const runAttackAction = async () => {\n        try {\n            if (gameContract) {\n                setAttackState(\"attacking\");\n                console.log(\"Attacking boss...\");\n\n                const attackTxn = await gameContract.attackBoss();\n                await attackTxn.wait();\n                console.log(\"attackTxn:\", attackTxn);\n                setAttackState(\"hit\");\n\n                setShowToast(true);\n                setTimeout(() => {\n                    setShowToast(false);\n                }, 5000);\n            }\n        } catch (error) {\n            console.log(\"Error attacking boss:\", error);\n            setAttackState(\"\");\n        }\n    };\n    useEffect(() => {\n        const fetchBoss = async () => {\n            const bossTxn = await gameContract.getBigBoss();\n            console.log(\"Boss:\", bossTxn);\n            setBoss(transformCharacterData(bossTxn));\n        };\n\n        const onAttackComplete = (newBossHp, newPlayerHp) => {\n            const bossHp = newBossHp.toNumber();\n            const playerHp = newPlayerHp.toNumber();\n            console.log(`AttackComplete: Boss Hp: ${bossHp} Player Hp: ${playerHp}`);\n\n            setBoss((prevState) => {\n                return { ...prevState, hp: bossHp };\n            });\n            setCharacterNFT((prevState) => {\n                return {...prevState, hp: playerHp};\n            });\n        };\n\n        if (gameContract) {\n            fetchBoss();\n            gameContract.on(\"AttackComplete\", onAttackComplete);\n        }\n\n        return () => {\n            if (gameContract) {\n                gameContract.off(\"AttackComplete\", onAttackComplete);\n            }\n        };\n    }, [gameContract]);\n    useEffect(() => {\n        const { ethereum } = window;\n        if (ethereum) {\n            const provider = new ethers.providers.Web3Provider(ethereum);\n            const signer = provider.getSigner();\n            const gameContract = new ethers.Contract(\n                CONTRACT_ADDRESS,\n                myEpicGame.abi,\n                signer\n            );\n            setGameContract(gameContract);\n        } else {\n            console.log(\"Ethereum object not found\");\n        }\n    }, []);\n    return (\n        <div className=\"arena-container\">\n            {boss && characterNFT && (\n                <div id=\"toast\" className={showToast ? \"show\" : \"\"}>\n                    <div id=\"desc\">{`💥 ${boss.name} was hit for ${characterNFT.attackDamage}!`}</div>\n                </div>\n            )}\n            {boss && (\n            <div className=\"boss-container\">\n                <div className={`boss-content ${attackState}`}>\n                    <h2>🔥 {boss.name} 🔥</h2>\n                        <div className=\"image-content\">\n                            <img src={boss.imageURI} alt={`Boss ${boss.name}`} />\n                            <div className=\"health-bar\">\n                                <progress value={boss.hp} max={boss.maxHp} />\n                                <p>{`${boss.hp} / ${boss.maxHp} HP`}</p>\n                            </div>\n                        </div>\n                </div>\n            <div className=\"attack-container\">\n          <button className=\"cta-button\" onClick={runAttackAction}>\n            {`💥 Attack ${boss.name}`}\n          </button>\n        </div>\n        {attackState === \"attacking\" && (\n            <div className=\"loading-indicator\">\n                <LoadingIndicator/>\n                <p>Attacking⚔️</p>\n            </div>\n        )}\n      </div>\n    )}\n    {characterNFT && (\n      <div className=\"players-container\">\n        <div className=\"player-container\">\n          <h2>Your Character</h2>\n          <div className=\"player\">\n            <div className=\"image-content\">\n              <h2>{characterNFT.name}</h2>\n              <img\n                src={characterNFT.imageURI}\n                alt={`Character ${characterNFT.name}`}\n              />\n              <div className=\"health-bar\">\n                <progress value={characterNFT.hp} max={characterNFT.maxHp} />\n                <p>{`${characterNFT.hp} / ${characterNFT.maxHp} HP`}</p>\n              </div>\n            </div>\n            <div className=\"stats\">\n              <h4>{`⚔️ Attack Damage: ${characterNFT.attackDamage}`}</h4>\n            </div>\n          </div>\n        </div>\n      </div>\n    )}\n            <p>NFT キャラクターを表示します。</p>\n        </div>\n    );\n};\nexport default Arena;",{"ruleId":"66","replacedBy":"67"},{"ruleId":"68","replacedBy":"69"},{"ruleId":"70","severity":1,"message":"71","line":97,"column":6,"nodeType":"72","endLine":97,"endColumn":8,"suggestions":"73"},{"ruleId":"70","severity":1,"message":"74","line":89,"column":8,"nodeType":"72","endLine":89,"endColumn":22,"suggestions":"75"},{"ruleId":"70","severity":1,"message":"74","line":66,"column":8,"nodeType":"72","endLine":66,"endColumn":22,"suggestions":"76"},{"ruleId":"66","replacedBy":"77"},{"ruleId":"68","replacedBy":"78"},{"ruleId":"79","severity":1,"message":"80","line":28,"column":19,"nodeType":"81","messageId":"82","endLine":28,"endColumn":21},{"ruleId":"70","severity":1,"message":"74","line":89,"column":8,"nodeType":"72","endLine":89,"endColumn":22,"suggestions":"83"},{"ruleId":"70","severity":1,"message":"74","line":66,"column":8,"nodeType":"72","endLine":66,"endColumn":22,"suggestions":"84"},"no-native-reassign",["85"],"no-negated-in-lhs",["86"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'checkIfWalletIsConnected'. Either include it or remove the dependency array.","ArrayExpression",["87"],"React Hook useEffect has a missing dependency: 'setCharacterNFT'. Either include it or remove the dependency array. If 'setCharacterNFT' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["88"],["89"],["85"],["86"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected",["90"],["91"],"no-global-assign","no-unsafe-negation",{"desc":"92","fix":"93"},{"desc":"94","fix":"95"},{"desc":"94","fix":"96"},{"desc":"94","fix":"97"},{"desc":"94","fix":"98"},"Update the dependencies array to be: [checkIfWalletIsConnected]",{"range":"99","text":"100"},"Update the dependencies array to be: [gameContract, setCharacterNFT]",{"range":"101","text":"102"},{"range":"103","text":"102"},{"range":"104","text":"102"},{"range":"105","text":"102"},[2994,2996],"[checkIfWalletIsConnected]",[3311,3325],"[gameContract, setCharacterNFT]",[2241,2255],[3311,3325],[2241,2255]]